#!/usr/bin/perl
#use warnings;
use strict;
#
# A simple Perl script to read in a CSV file and calculate the
# pass rates for papers.
#
# It is assumed that the data is grouped by Paper Master Code and then
# Paper Occurrence.
#
# Arguments are name of input file and name of output file. By default,
# the analysis is based on paper master code. However, there is an optional
# third argument of "-o" which will yield an analysis based on paper
# occurrence.
#
# There should be a single header line in the CSV file.
#
# Headers searched for in this header line are:
# Owning School Clevel, Paper Master Code, Paper Occurrence, Prog Abbr, 
# Grade, Isdomestic, Result Status.
#
# The program will still run if "Owning School Clevel" or "Result Status"
# are missing. However, it will exit if any of the other five headers
# are missing.
#
# We shall ignore the ... grade and any "blank" grades.
#
# Output is in the form of a CSV file
#
open(GRADEDATA,$ARGV[0]);
open(OUTPUT,">$ARGV[1]");

my @allgrades = qw(A+ A A- B+ B B- C+ C C- P RP IC ... D E F NC WD);

my $start = 0;

my $tot = 0;
my $wd = 0;
my $totpass = 0;

my $mf = 0;
my $mfpass = 0;

my $fci = 0;
my $fcipass = 0;

my $mf_level7 = 0;
my $mf_level7pass = 0;
my $mf_level8 = 0;
my $mf_level8pass = 0;

my $fci_level7 = 0;
my $fci_level7pass = 0;
my $fci_level8 = 0;
my $fci_level8pass = 0;

my $i;
my $papercode;
my $oldpapercode;
my $prog;
my $actual_grade;
my $domestic;
my $level;
my $grade;
my @grade;

my $col_master;
my $col_occur;
my $col_prog;
my $col_grade;
my $col_school;
my $col_domestic;
my $col_status;

use Text::CSV;
my $csv = Text::CSV->new({sep_char => ','});

while (<GRADEDATA>) {
   $start += 1;
#  @grade = split(/,/,$_);

   my $err = 0;
   if ($csv->parse($_)) {
      @grade = $csv->fields();
   } else {
#     printf STDOUT "Warning: Line %d could not be parsed and so ignored.\n",$start;
      $err = 1; 
   }
#  Header line is processed differently to other lines.
   if ($start > 1 and $err == 0) {
      $papercode = $grade[$col_master];
      if ($ARGV[2] eq "-o") {
         $papercode = $grade[$col_occur];
      }

      if ($start == 2) {
         $oldpapercode = $papercode;
      }
      $level = substr($papercode, 4, 1);
      $prog = $grade[$col_prog];

# Found new paper code and so print out results for previous paper code.
      if ($papercode ne $oldpapercode) {
         if ($tot > 0 and $wd != $tot) {
            printf OUTPUT "%s,Total Enrolment,,%d,\n", $oldpapercode, $tot;
            printf OUTPUT ",# passed,,%d,%6.2f\%\n", $totpass, 100*$totpass/$tot;
            printf OUTPUT ",,,,\n";

            printf OUTPUT ",Domestic total,,%d,\n", $mf;
            if ($mf > 0) {
               printf OUTPUT ",# passed,,%d,%6.2f\%\n", $mfpass, 100*$mfpass/$mf;
            } else {
               printf OUTPUT ",# passed,,%d,,\n", $mfpass;
            }
            printf OUTPUT ",,,,\n";
           
            printf OUTPUT ",International total,,%d,\n", $fci;
            if ($fci > 0) {
               printf OUTPUT ",# passed,,%d,%6.2f\%\n", $fcipass, 100*$fcipass/$fci;
            } else {
               printf OUTPUT ",# passed,,%d,,\n", $fcipass;
            }
            printf OUTPUT ",,,,\n";
           
            printf OUTPUT ",Domestic level 7,,%d,\n", $mf_level7;
            if ($mf_level7 > 0) {
               printf OUTPUT ",# passed,,%d,%6.2f\%\n", $mf_level7pass, 100*$mf_level7pass/$mf_level7;
               if ($level le "4" and $mf_level7pass/$mf_level7 <= 0.6) {
                  printf STDOUT "Warning: %d domestic level 7 students in %s had pass rate of %6.2f\%\n", $mf_level7, $oldpapercode, 100*$mf_level7pass/$mf_level7;
               }
            } else {
               printf OUTPUT ",# passed,,%d,,\n", $mf_level7pass;
            }
            printf OUTPUT ",,,,\n";

            printf OUTPUT ",Domestic level >= 8,,%d,\n", $mf_level8;
            if ($mf_level8 > 0) {
               printf OUTPUT ",# passed,,%d,%6.2f\%\n", $mf_level8pass, 100*$mf_level8pass/$mf_level8;
               if ($level le "4" and $mf_level8pass/$mf_level8 <= 0.6) {
                  printf STDOUT "Warning: %d domestic level 8 students in %s had pass rate of %6.2f\%\n", $mf_level8, $oldpapercode, 100*$mf_level8pass/$mf_level8;
               }
            } else {
               printf OUTPUT ",# passed,,%d,,\n", $mf_level8pass;
            }
            printf OUTPUT ",,,,\n";
           
            printf OUTPUT ",International level 7,,%d,\n", $fci_level7;
            if ($fci_level7 > 0) {
               printf OUTPUT ",# passed,,%d,%6.2f\%\n", $fci_level7pass, 100*$fci_level7pass/$fci_level7;
            } else {
               printf OUTPUT ",# passed,,%d,,\n", $fci_level7pass;
            }
            printf OUTPUT ",,,,\n";

            printf OUTPUT ",International level >= 8,,%d,\n", $fci_level8;
            if ($fci_level8 > 0) {
               printf OUTPUT ",# passed,,%d,%6.2f\%\n", $fci_level8pass, 100*$fci_level8pass/$fci_level8;
            } else {
               printf OUTPUT ",# passed,,%d,,\n", $fci_level8pass;
            }
            printf OUTPUT ",,,,\n";
            printf OUTPUT ",,,,\n";
         } else {
            if ($tot > 0) {
               printf STDOUT "Warning: All students in %s are WD students\n", $oldpapercode;
            }
            if ($tot == 0) {
               printf STDOUT "Warning: Grades missing for %s\n", $oldpapercode;
            }
         }

         $oldpapercode = $papercode;
         $tot = 0;
         $wd = 0;
         $totpass = 0;

         $mf = 0;
         $mfpass = 0;

         $fci = 0;
         $fcipass = 0;

         $mf_level7 = 0;
         $mf_level7pass = 0;
         $mf_level8 = 0;
         $mf_level8pass = 0;

         $fci_level7 = 0;
         $fci_level7pass = 0;
         $fci_level8 = 0;
         $fci_level8pass = 0;
      }

      $actual_grade = $grade[$col_grade];
#
# Ignore ... and "blank" grades. Only process if we don't have this.
#
      if ($actual_grade ne "..." and $actual_grade ne "") {
         $domestic = $grade[$col_domestic];
         $tot ++; 

         if ($domestic < 1) {
            $fci ++;
            if (index($prog,"Hons") > -1 or $level ge "5") {
               $fci_level8 ++;
            } else {
               $fci_level7 ++;
            }
         } else {
           $mf ++; 
            if (index($prog,"Hons") > -1 or $level ge "5") {
               $mf_level8 ++;
            } else {
               $mf_level7 ++;
            }
         }

         my $passing = 0;
         for ($i = 0; $i < 11; $i++) {
             if ($actual_grade eq $allgrades[$i]) {
                $passing = 1;
             }
         }
         if ($passing == 1) {
            $totpass ++;
            if ($domestic < 1) {
               $fcipass ++;
               if (index($prog,"Hons") > -1 or $level ge "5") {
                  $fci_level8pass ++;
               } else {
                  $fci_level7pass ++;
               }
            } else {
               $mfpass ++; 
               if (index($prog,"Hons") > -1 or $level ge "5") {
                  $mf_level8pass ++;
               } else {
                  $mf_level7pass ++;
               }
            }
         }
         if ($actual_grade eq "WD") {
            $wd ++;
         }
      }
   } else {
      if ($start == 1) {
         $col_master = -1;
         $col_occur = -1;
         $col_prog = -1;
         $col_grade = -1;
         $col_school = -1;
         $col_domestic = -1;
         $col_status = -1;
#
# Look for headers in header line.
#
         for ($i = 0; $i <= $#grade; $i++) {
             if ($grade[$i] eq "Paper Master Code" or
                 $grade[$i] eq "paper_master_code") {
                $col_master = $i;
             }
             if ($grade[$i] eq "Paper Occurrence" or
                 $grade[$i] eq "paper_occurrence") {
                $col_occur = $i;
             }
             if ($grade[$i] eq "Prog Abbr" or
                 $grade[$i] eq "prog_abbr") {
                $col_prog = $i;
             }
             if ($grade[$i] eq "Grade" or
                 $grade[$i] eq "grade") {
                $col_grade = $i;
             }
             if ($grade[$i] eq "Owning School Clevel" or
                 $grade[$i] eq "owning_school_clevel") {
                $col_school = $i;
             }
             if ($grade[$i] eq "Isdomestic" or
                 $grade[$i] eq "isdomestic") {
                $col_domestic = $i;
             }
             if ($grade[$i] eq "Result Status" or
                 $grade[$i] eq "result_status") {
                $col_status = $i;
             }
         }
         if ($col_master == -1) {
            printf STDOUT "Warning: Paper Master Code column missing - program exiting. - %d\n",$start;
            exit;
         }
         if ($col_occur == -1) {
            printf STDOUT "Warning: Paper Occurrence column missing - program exiting.\n";
            exit;
         }
         if ($col_prog == -1) {
            printf STDOUT "Warning: Programme Abbreviation column missing - program exiting.\n";
            exit;
         }
         if ($col_grade == -1) {
            printf STDOUT "Warning: Grade column missing - program exiting.\n";
            exit;
         }
         if ($col_domestic == -1) {
            printf STDOUT "Warning: Isdomestic column missing - program exiting.\n";
            exit;
         }
      }
   }
}
# Print out data for last paper code.
if ($tot > 0 and $wd != $tot) {
   printf OUTPUT "%s,Total Enrolment,,%d,\n", $oldpapercode, $tot;
   printf OUTPUT ",# passed,,%d,%6.2f\%\n", $totpass, 100*$totpass/$tot;
   printf OUTPUT ",,,,\n";

   printf OUTPUT ",Domestic total,,%d,\n", $mf;
   if ($mf > 0) {
      printf OUTPUT ",# passed,,%d,%6.2f\%\n", $mfpass, 100*$mfpass/$mf;
   } else {
      printf OUTPUT ",# passed,,%d,,\n", $mfpass;
   }
   printf OUTPUT ",,,,\n";
  
   printf OUTPUT ",International total,,%d,\n", $fci;
   if ($fci > 0) {
      printf OUTPUT ",# passed,,%d,%6.2f\%\n", $fcipass, 100*$fcipass/$fci;
   } else {
      printf OUTPUT ",# passed,,%d,,\n", $fcipass;
   }
   printf OUTPUT ",,,,\n";
  
   printf OUTPUT ",Domestic level 7,,%d,\n", $mf_level7;
   if ($mf_level7 > 0) {
      printf OUTPUT ",# passed,,%d,%6.2f\%\n", $mf_level7pass, 100*$mf_level7pass/$mf_level7;
      if ($level le "4" and $mf_level7pass/$mf_level7 <= 0.6) {
         printf STDOUT "Warning: %d domestic level 7 students in %s had pass rate of %6.2f\%\n", $mf_level7, $oldpapercode, 100*$mf_level7pass/$mf_level7;
      }
   } else {
      printf OUTPUT ",# passed,,%d,,\n", $mf_level7pass;
   }
   printf OUTPUT ",,,,\n";

   printf OUTPUT ",Domestic level >= 8,,%d,\n", $mf_level8;
   if ($mf_level8 > 0) {
      printf OUTPUT ",# passed,,%d,%6.2f\%\n", $mf_level8pass, 100*$mf_level8pass/$mf_level8;
      if ($level le "4" and $mf_level8pass/$mf_level8 <= 0.6) {
         printf STDOUT "Warning: %d domestic level 8 students in %s had pass rate of %6.2f\%\n", $mf_level7, $papercode, 100*$mf_level7pass/$mf_level7;
      }
   } else {
      printf OUTPUT ",# passed,,%d,,\n", $mf_level8pass;
   }
   printf OUTPUT ",,,,\n";
  
   printf OUTPUT ",International level 7,,%d,\n", $fci_level7;
   if ($fci_level7 > 0) {
      printf OUTPUT ",# passed,,%d,%6.2f\%\n", $fci_level7pass, 100*$fci_level7pass/$fci_level7;
   } else {
      printf OUTPUT ",# passed,,%d,,\n", $fci_level7pass;
   }
   printf OUTPUT ",,,,\n";

   printf OUTPUT ",International level >= 8,,%d,\n", $fci_level8;
   if ($fci_level8 > 0) {
      printf OUTPUT ",# passed,,%d,%6.2f\%\n", $fci_level8pass, 100*$fci_level8pass/$fci_level8;
   } else {
      printf OUTPUT ",# passed,,%d,,\n", $fci_level8pass;
   }
} else {
   if ($tot > 0) {
      printf STDOUT "Warning: All students in %s are WD students\n", $oldpapercode;
   }
   if ($tot == 0) {
      printf STDOUT "Warning: Grades missing for %s\n", $oldpapercode;
   }
}
